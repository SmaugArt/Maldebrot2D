/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Global;

//import com.sun.xml.internal.bind.v2.runtime.reflect.opt.Const;
import Global.PointStruct;
import Global.ColorStruct;
import Global.ImageStruct;
import Global.ComplexValue;
import Global.JPanel2;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import javax.swing.JPanel;
//import sun.util.logging.resources.logging;

/**
 *
 * @author demin
 */
public class Canvous extends javax.swing.JFrame {
    int globalW = 681;
    int globalH = 681;
    //double localW=681;
    //double localH=681;
    int globalX0 = (int)(3*globalW/4);
    int globalY0 = (int)(globalH/2);
    double localX0=globalX0;
    double localY0=globalY0; 
    int globalL = 100;//320;
    double localL=100; //шаг?
    double localScale=0;
    double localPointX, localPointY;
    ImageStruct image;
    
    // JPanel2 jPanel2;
    private Graphics2D grab;
    private BufferedImage img;
    private ColorStruct colors[];

    public Canvous() {
        initComponents();
        img = new BufferedImage(856,550, BufferedImage.TYPE_INT_ARGB); //один буфер для всех слоев
        grab = img.createGraphics(); //через этот графикс отрисовываем image на img, который в свою очередь отрисовываем на canvas       
        image = new ImageStruct(this.globalW, this.globalH, null, null);
        
        //заполнение colors
        colors = new ColorStruct[256];
        int red[] = {0, 36, 73, 109, 146, 182, 219, 255};
        int green[] = red;
        int blue[] = {0, 85, 170, 255};
        
        int m = 0;
        
        for (int i = 0; i < 8; i++)
         for (int j = 0; j < 8; j++)
            for (int k = 0; k < 4; k++)
                colors[m++] = new ColorStruct(red[i], green[j], blue[k]);
        
        Canvous3(localX0, localY0); //рисуем мальдеброта
        paintMoldebroh(globalW, globalH, grab);
        //вывод на экран
    }
   
    
    public void Canvous3(double localX0,double localY0) { //мальдеброт от заданного значения
       for (int i = 0; i < globalW; i++){
                double x = (double)(i - localX0) / localL;
		for (int j = 0; j < globalH; j++)
		{
			
			double y = (double)(j - localY0) / localL;
			//double complex z = x + I * y; //I -комплексное число
                        ComplexValue complex= new ComplexValue(x,y);
			int gray = get_gray_color(complex);
			//if (gray != 255){
			//	//Set_color(img, i, j, (color) {gray, gray, gray});
                                image.addColor(i, j, colors[gray]);//new ColorStruct(gray, gray, gray));
                        //}else{
                           // image.addColor(i, j, new ColorStruct());
                       // }
		}
        }
    }
    
    
    
    public void paintMoldebroh(int width, int height, Graphics g){ //поместить на canvas
        //repaint();
        g.setColor(Color.WHITE);
        g.fillRect(0,0,681,681);//this.getWidth(),this.getHeight());
        for (int y=0; y<height;y++){
            for (int x=0; x<width;x++){
                //int colors=image.pixels[x][y].red;
                //g.setColor(new Color(colors,colors,colors));
                g.setColor(new Color(image.pixels[x][y].red,image.pixels[x][y].green,image.pixels[x][y].blue));
                g.drawLine(x, y, x, y);
            }
        }
    }
    
    
    @Override
    public void paint(Graphics g){
       g.drawImage(img, 0, 0, this);
    }
    private int get_gray_color(ComplexValue complexValue){ //получает номер в массиве 256 цветов
        
        ComplexValue complex = new ComplexValue(complexValue.x, complexValue.iY); //структура с типом complex для взятия абсолютного числа cabs = sqrt(x^2+y^2)
	for (int gray = 255; gray>-1; gray--)  //uchar - тип, определенный в pgraph.h и == unsigned char
	{
		if (complex.AbsolutlyValue() > 10)
			return gray;
                double value1=complex.ComplexValuePowReal()+complexValue.x;
                double value2=complex.ComplexValuePowCom()+complexValue.iY;
                complex.x=value1;
                complex.iY=value2;  //здесь ошибка
	}
        return 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                formMouseWheelMoved(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });

        jButton1.setText("Type1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Type2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Type3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Type4");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Type5");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Type6");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton6)
                .addContainerGap(413, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(628, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(jButton6))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // перерисовка
        Graphics g = this.getGraphics();
        paintMoldebroh(globalW, globalH, g);
    }//GEN-LAST:event_formMouseClicked

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // TODO add your handling code here:
        //Graphics g = this.getGraphics();
        //paintMoldebroh(globalW, globalH, g);
        localPointX= evt.getX();
        localPointY= evt.getY();
    }//GEN-LAST:event_formMousePressed

    private void formMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_formMouseWheelMoved
        // TODO add your handling code here:
        if (evt.getUnitsToScroll()==3){  //отдаление
            localScale=localScale*0.8;
            localL=localL*0.8;
        }
        if (evt.getUnitsToScroll()==-3){  //увеличение
           localScale=localScale*1.25;
           localL=localL*1.25;
        }
        //Graphics g = this.getGraphics();
        Canvous3(localX0, localY0);
        paintMoldebroh(globalW, globalH, grab);///g);
        repaint();
    }//GEN-LAST:event_formMouseWheelMoved

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        // TODO add your handling code here:
        double x=evt.getX()-localPointX;
        double y=evt.getY()-localPointY;
        x=x/Math.exp(localScale);
        y=y/Math.exp(localScale);

        Canvous3(x+localX0,y+localY0);
        paintMoldebroh(globalW, globalH, grab);
        repaint();
    }//GEN-LAST:event_formMouseDragged

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        // TODO add your handling code here:
        double x=evt.getX()-localPointX;
        double y=evt.getY()-localPointY;
        x=x/Math.exp(localScale);
        y=y/Math.exp(localScale);
        localX0=localX0+x;
        localY0=localY0+y;
    }//GEN-LAST:event_formMouseReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        colors = new ColorStruct[256];
        int red[] = {0, 36, 73, 109, 146, 182, 219, 255};
        int green[] = red;
        int blue[] = {0, 85, 170, 255};
        
        int m = 0;
        
        for (int i = 0; i < 8; i++)
         for (int j = 0; j < 8; j++)
            for (int k = 0; k < 4; k++)
                colors[m++] = new ColorStruct(red[i], green[j], blue[k]);
        
        Canvous3(localX0, localY0); //рисуем мальдеброта
        paintMoldebroh(globalW, globalH, grab);
        repaint();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        colors = new ColorStruct[256];
        int red[] = {0, 36, 73, 109, 146, 182, 219, 255};
        int green[] = red;
        int blue[] = {0, 85, 170, 255};
        
        int m = 0;
        
        for (int i = 0; i < 8; i++)
         for (int j = 0; j < 8; j++)
            for (int k = 0; k < 4; k++)
                colors[m++] = new ColorStruct(red[i], blue[k], green[j]);
        
        Canvous3(localX0, localY0); //рисуем мальдеброта
        paintMoldebroh(globalW, globalH, grab);
        repaint();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        colors = new ColorStruct[256];
        int red[] = {0, 36, 73, 109, 146, 182, 219, 255};
        int green[] = red;
        int blue[] = {0, 85, 170, 255};
        
        int m = 0;
        
        for (int i = 0; i < 8; i++)
         for (int j = 0; j < 8; j++)
            for (int k = 0; k < 4; k++)
                colors[m++] = new ColorStruct(blue[k], red[i], green[j]);
        
        Canvous3(localX0, localY0); //рисуем мальдеброта
        paintMoldebroh(globalW, globalH, grab);
        repaint();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        colors = new ColorStruct[256];
        int red[] = {0, 36, 73, 109, 146, 182, 219, 255};
        int green[] = red;
        int blue[] = {0, 85, 170, 255};
        
        int m = 0;
        
        for (int i = 0; i < 8; i++)
         for (int j = 0; j < 8; j++)
            for (int k = 0; k < 4; k++)
                colors[m++] = new ColorStruct(green[j], blue[k], red[i]);
        
        Canvous3(localX0, localY0); //рисуем мальдеброта
        paintMoldebroh(globalW, globalH, grab);
        repaint();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        colors = new ColorStruct[256];
        int red[] = {0, 36, 73, 109, 146, 182, 219, 255};
        int green[] = red;
        int blue[] = {0, 85, 170, 255};
        
        int m = 0;
        
        for (int i = 0; i < 8; i++)
         for (int j = 0; j < 8; j++)
            for (int k = 0; k < 4; k++)
                colors[m++] = new ColorStruct(blue[k], green[j], red[i]);
        
        Canvous3(localX0, localY0); //рисуем мальдеброта
        paintMoldebroh(globalW, globalH, grab);
        repaint();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        colors = new ColorStruct[256];
        int red[] = {0, 36, 73, 109, 146, 182, 219, 255};
        int green[] = red;
        int blue[] = {0, 85, 170, 255};
        
        int m = 0;
        
        for (int i = 0; i < 8; i++)
         for (int j = 0; j < 8; j++)
            for (int k = 0; k < 4; k++)
                colors[m++] = new ColorStruct(green[j], red[i], blue[k]);
        
        Canvous3(localX0, localY0); //рисуем мальдеброта
        paintMoldebroh(globalW, globalH, grab);
        repaint();
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Canvous.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Canvous.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Canvous.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Canvous.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Canvous().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    // End of variables declaration//GEN-END:variables
}
